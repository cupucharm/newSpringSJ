<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myspring.newSpringSJ.mapper.MemberDAO">
	<select id="login" resultType="com.myspring.newSpringSJ.entity.MemberVO"  parameterType="java.util.Map"  >
			select * from tb_member 
			 where member_id=#{member_id}		
	</select>
	
	<select id="isLoginDo" resultType="String">
			select member_condition from tb_member 
			 where member_id=#{member_id}		
	</select>
	
	<select id="selectOverlappedID" resultType="String" >
			select case count(*) when 1 then  'true'  when 0 then  'false' end
	   		from tb_member
	   		where member_id = #{id}	
	</select>
	
	<insert id="insertNewMember" parameterType="java.util.Map"  >
			insert into tb_member(member_id,
				 					 member_pw,
                                     member_name,
                                     member_gender,
                                     member_birth,
                                     member_phone,
                                     email,
                                     zipcode,
                                     roadAddress,
                                     jibunAddress,
                                     namujiAddress)
							 values(#{member_id},
									#{member_pw},
									#{member_name},
                                 	#{member_gender},
                                   	#{member_birth},
                                    #{member_phone},
                                    #{email},
                                    #{zipcode},
                                    #{roadAddress},
                                    #{jibunAddress},
                                    #{namujiAddress})	
	</insert>

	<select id="isMailExist" resultType="String"  parameterType="java.util.Map"  >
			select case when count(*)=0 then 'false' else 'true' end 
			from tb_member 
			where email=#{email}		
	</select>
	
	<select id="selectEmail" resultType="com.myspring.newSpringSJ.entity.MemberVO" >
			select *
			from tb_member 
			where email=#{email}		
	</select>
	
	<update id="changePw">
		update tb_member
		set member_pw=#{member_pw}
		where member_id=#{member_id}
	</update>
	
	
	<update id="setLoginTime">
		update tb_member
		set member_logintime=#{date}
		where member_id=#{id}
	</update>
	
</mapper>